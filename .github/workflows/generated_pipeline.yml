name: Validate ServiceNow

description: Validate ServiceNow ticket

branding:
  icon: 'check-circle'
  color: 'green'

inputs:
  serviceNowApiUrl: { description: 'ServiceNow API URL', required: true }
  serviceNowCredId: { description: 'ServiceNow credential ID', required: true }

outputs:
  validated: { description: 'Whether the ServiceNow ticket was validated' }

runs:
  using: 'composite'

  steps:
- name: Validate ServiceNow ticket
      run: |
        # Initialize retry variables
        maxAttempts=3
        retryDelay=10
        attempt=0

        # Set ServiceNow API URL and credential ID
        serviceNowApiUrl="${{ inputs.serviceNowApiUrl }}"
        serviceNowCredId="${{ inputs.serviceNowCredId }}"

        # Validate ServiceNow ticket
        while [ $attempt -lt $maxAttempts ]; do
          # Try to verify ticket
          response=$(curl -s -X GET \
            https://${serviceNowApiUrl}/api/now/table/incident \
            -H 'Accept: application/json' \
            -H 'Content-Type: application/json' \
            -u ${serviceNowCredId})

          # Check if API call was successful
          if [ $? -eq 0 ]; then
            # Verify ticket prior to approval
            ticketData=$(echo "$response" | jq -r '.result[].sys_id')
            if [ -n "$ticketData" ]; then
              # Get ticket details to display
              ticketDetails=$(curl -s -X GET \
                https://${serviceNowApiUrl}/api/now/table/incident/${ticketData} \
                -H 'Accept: application/json' \
                -H 'Content-Type: application/json' \
                -u ${serviceNowCredId})

              # Set output to indicate validation success
              echo "validated=true" >> $GITHUB_OUTPUT
              exit 0
            fi
          fi

          # If API call failed, retry after delay
          attempt=$((attempt + 1))
          echo "Attempt $attempt/$maxAttempts failed. Retrying in $retryDelay seconds..."
          sleep $retryDelay
        done

        # If all attempts failed, set output to indicate validation failure
        echo "validated=false" >> $GITHUB_OUTPUT
        exit 1