name: Validate ServiceNow

description: Validate ServiceNow ticket

branding:
  icon: 'check-circle'
  color: 'green'

inputs:
  serviceNowApiUrl: { description: 'ServiceNow API URL', required: true }
  serviceNowCredId: { description: 'ServiceNow credential ID', required: true }

runs:
  using: 'composite'

  steps:
    - name: Validate ServiceNow ticket
      run: |
        in_ticket_window=false
        max_attempts=3
        delay=10

        while [ $in_ticket_window = false ]; do
          attempt=0
          while [ $attempt -lt $max_attempts ]; do
            # Verify ticket prior to approval
            response=$(curl -X GET \
              https://${{ inputs.serviceNowApiUrl }}/api/now/v1/ticket/${{ github.event.pull_request.number }} \
              -H 'Content-Type: application/json' \
              -H 'Authorization: Bearer ${{ secrets.SERVICE_NOW_TOKEN }}' \
              -w '%{http_code}' -o /dev/null)

            if [ $response -eq 200 ]; then
              echo "Ticket verified successfully"
              break
            else
              echo "Attempt $((attempt+1)) failed with status code $response. Retrying in $delay seconds..."
              sleep $delay
              attempt=$((attempt+1))
            fi
          done

          if [ $attempt -eq $max_attempts ]; then
            echo "Failed to verify ticket after $max_attempts attempts. Aborting..."
            exit 1
          fi

          # Get ticket details to display
          response=$(curl -X GET \
            https://${{ inputs.serviceNowApiUrl }}/api/now/v1/ticket/${{ github.event.pull_request.number }} \
            -H 'Content-Type: application/json' \
            -H 'Authorization: Bearer ${{ secrets.SERVICE_NOW_TOKEN }}')

          echo "$response"

          in_ticket_window=true
        done

        echo "::set-output name=ticket_valid::true"
      shell: bash

    - name: Handle abort or failure
      run: |
        if [ $? -ne 0 ]; then
          echo "ServiceNow ticket validation failed or validation was aborted."
          exit 1
        fi
      shell: bash